{
  "_args": [
    [
      {
        "name": "weex-styler",
        "raw": "weex-styler@https://registry.npmjs.org/weex-styler/-/weex-styler-0.2.3.tgz",
        "rawSpec": "https://registry.npmjs.org/weex-styler/-/weex-styler-0.2.3.tgz",
        "scope": null,
        "spec": "https://registry.npmjs.org/weex-styler/-/weex-styler-0.2.3.tgz",
        "type": "remote"
      },
      "/Users/fengfeng/Desktop/mobile/bb8-front/node_modules/weex-builder"
    ]
  ],
  "_from": "weex-styler@https://registry.npmjs.org/weex-styler/-/weex-styler-0.2.3.tgz",
  "_id": "weex-styler@0.2.3",
  "_inCache": true,
  "_location": "/weex-builder/weex-styler",
  "_phantomChildren": {},
  "_requested": {
    "name": "weex-styler",
    "raw": "weex-styler@https://registry.npmjs.org/weex-styler/-/weex-styler-0.2.3.tgz",
    "rawSpec": "https://registry.npmjs.org/weex-styler/-/weex-styler-0.2.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/weex-styler/-/weex-styler-0.2.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/weex-builder",
    "/weex-builder/weex-loader",
    "/weex-builder/weex-transformer",
    "/weex-builder/weex-vue-loader"
  ],
  "_resolved": "https://registry.npmjs.org/weex-styler/-/weex-styler-0.2.3.tgz",
  "_shasum": "1abe810c0c29835d75b6856f0d36d9729e169281",
  "_shrinkwrap": null,
  "_spec": "weex-styler@https://registry.npmjs.org/weex-styler/-/weex-styler-0.2.3.tgz",
  "_where": "/Users/fengfeng/Desktop/mobile/bb8-front/node_modules/weex-builder",
  "author": {
    "email": "songsiqi2006@126.com",
    "name": "songsiqi"
  },
  "bugs": {
    "url": "https://github.com/weexteam/weex-styler/issues"
  },
  "dependencies": {
    "css": "~2.2.1"
  },
  "description": "Weex <style> transformer",
  "devDependencies": {
    "chai": "~3.4.1",
    "gulp": "~3.9.0",
    "gulp-jscs": "~3.0.2",
    "gulp-mocha": "~2.2.0",
    "isparta": "~4.0.0",
    "sinon": "~1.17.2",
    "sinon-chai": "~2.8.0"
  },
  "homepage": "https://github.com/weexteam/weex-styler#readme",
  "keywords": [
    "weex"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "weex-styler",
  "optionalDependencies": {},
  "readme": "# Weex `<style>` Transformer\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][circle-image]][circle-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[npm-image]: https://img.shields.io/npm/v/weex-styler.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/weex-styler\n[circle-image]: https://circleci.com/gh/alibaba/weex_toolchain.svg?style=svg\n[circle-url]: https://circleci.com/gh/alibaba/weex_toolchain/tree/master\n[downloads-image]: https://img.shields.io/npm/dm/weex-styler.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/weex-styler\n\n## Features\n\n- convert a `<style>` element to JSON format\n- autofix common mistakes\n- friendly warnings\n\n## API\n\n- `parse(code, done)`\n- `validate(json, done)`\n- `validateItem(name, value)`\n\n### util api\n\n- `util.hyphenedToCamelCase(value)`\n- `util.camelCaseToHyphened(value)`\n\n```javascript\n/**\n * Parse `<style>` code to a JSON Object and log errors & warnings\n * \n * @param {string} code\n * @param {function} done\n */\nfunction parse(code, done) {}\n\n/**\n * Validate a JSON Object and log errors & warnings\n * \n * @param {object} json\n * @param {function} done\n */\nfunction validate(json, done) {}\n\n/**\n * Result callback\n *\n * data\n * - jsonStyle{}: `classname.propname.value`-like object\n * - log[{line, column, reason}]\n * \n * @param {Error} err\n * @param {object} data\n */\nfunction done(err, data) {}\n\n/**\n * Validate a single name-value pair\n * \n * @param  {string} name  camel cased\n * @param  {string} value\n * @return {object}\n * - value\n * - log{reason}\n */\nfunction validateItem(name, value) {}\n```\n\n## Validation\n\n- rule check: only common rule type supported, othres will be ignored\n- selector check: only single-classname selector is supported, others will be ignored\n- prop name check: out-of-defined prop name will be warned but preserved\n- prop value check: common prop value mistakes will be autofixed or ignored\n    + color type: keywords, `#xxx` -> warning: `#xxxxxx`\n    + color type: `transparent` -> error: not supported\n    + length type: `100px` -> warning: `100`\n\n## Demo\n\n```javascript\nvar styler = require('weex-styler')\n\nvar code = 'html {color: #000000;} .foo {color: red; -webkit-transform: rotate(90deg); width: 200px;}'\n\nstyler.parse(code, function (err, data) {\n  // syntax error\n  // format: {line, column, reason, ...}\n  err\n  // result\n  // {foo: {color: '#ff0000', webkitTransform: 'rotate(90deg)', width: 200}}\n  data.jsonStyle\n  // format: {line, column, reason}\n  // - Error: Selector `html` is not supported. Weex only support single-classname selector\n  // - Warning: prop value `red` is autofixed to `#ff0000`\n  // - Warning: prop name `-webkit-transform` is not supported\n  // - Warning: prop value `200px` is autofixed to `200`\n  data.log[]\n})\n\nvar jsonStyle = {\n  foo: {\n    color: 'red',\n    webkitTransform: 'rotate(90deg)',\n    width: '200px'\n  }\n}\n\nstyler.validate(json, function (err, data) {\n  // syntax error\n  err\n  // result\n  // {foo: {color: '#ff0000', webkitTransform: 'rotate(90deg)', width: 200}}\n  data.jsonStyle\n  // format: {reason}\n  // - Warning: prop value `red` is autofixed to `#ff0000`\n  // - Warning: prop name `-webkit-transform` is not supported\n  // - Warning: prop value `200px` is autofixed to `200`\n  data.log[]\n})\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/weexteam/weex-styler.git"
  },
  "scripts": {
    "cover": "node node_modules/isparta/bin/isparta cover node_modules/gulp-mocha/node_modules/.bin/_mocha -- --reporter dot",
    "test": "gulp test && npm run cover"
  },
  "version": "0.2.3"
}
