{
  "_args": [
    [
      "stringstream@0.0.5",
      "/Users/eshanker/Code/fsevents"
    ],
    [
      {
        "name": "stringstream",
        "raw": "stringstream@https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz",
        "rawSpec": "https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz",
        "scope": null,
        "spec": "https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz",
        "type": "remote"
      },
      "/Users/fengfeng/Desktop/mobile/bb8-front/node_modules/weex-builder/node_modules/fsevents"
    ]
  ],
  "_from": "stringstream@0.0.5",
  "_id": "stringstream@0.0.5",
  "_inBundle": false,
  "_integrity": "sha1-TkhM1N5aC7vuGORjB3EKioFiGHg=",
  "_location": "/weex-builder/fsevents/stringstream",
  "_phantomChildren": {},
  "_requested": {
    "name": "stringstream",
    "raw": "stringstream@https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz",
    "rawSpec": "https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/weex-builder/fsevents",
    "/weex-builder/fsevents/request"
  ],
  "_resolved": "https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz",
  "_shrinkwrap": null,
  "_spec": "stringstream@https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz",
  "_where": "/Users/fengfeng/Desktop/mobile/bb8-front/node_modules/weex-builder/node_modules/fsevents",
  "author": {
    "email": "michael.hart.au@gmail.com",
    "name": "Michael Hart",
    "url": "http://github.com/mhart"
  },
  "bugs": {
    "url": "https://github.com/mhart/StringStream/issues"
  },
  "dependencies": {},
  "description": "Encode and decode streams into string streams",
  "devDependencies": {},
  "homepage": "https://github.com/mhart/StringStream#readme",
  "keywords": [
    "string",
    "stream",
    "base64",
    "gzip"
  ],
  "license": "MIT",
  "main": "stringstream.js",
  "name": "stringstream",
  "optionalDependencies": {},
  "readme": "# Decode streams into strings The Right Way(tm)\n\n```javascript\nvar fs   = require('fs')\nvar zlib = require('zlib')\nvar strs = require('stringstream')\n\nvar utf8Stream = fs.createReadStream('massiveLogFile.gz')\n  .pipe(zlib.createGunzip())\n  .pipe(strs('utf8'))\n```\n\nNo need to deal with `setEncoding()` weirdness, just compose streams\nlike they were supposed to be!\n\nHandles input and output encoding:\n\n```javascript\n// Stream from utf8 to hex to base64... Why not, ay.\nvar hex64Stream = fs.createReadStream('myFile')\n  .pipe(strs('utf8', 'hex'))\n  .pipe(strs('hex', 'base64'))\n```\n\nAlso deals with `base64` output correctly by aligning each emitted data\nchunk so that there are no dangling `=` characters:\n\n```javascript\nvar stream = fs.createReadStream('myFile').pipe(strs('base64'))\n\nvar base64Str = ''\n\nstream.on('data', function(data) { base64Str += data })\nstream.on('end', function() {\n  console.log('My base64 encoded file is: ' + base64Str) // Wouldn't work with setEncoding()\n  console.log('Original file is: ' + new Buffer(base64Str, 'base64'))\n})\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mhart/StringStream.git"
  },
  "version": "0.0.5"
}
